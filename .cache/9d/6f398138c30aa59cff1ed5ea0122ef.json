{"id":"../js/Eloquent-js_answers.js","dependencies":[{"name":"/Users/robyn-123/Documents/Projects-2023/Project-EloquentJS-Review/package.json","includedInParent":true,"mtime":1689943002072}],"generated":{"js":"//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//Eloquent Javascript\n\n//Chapter 02\n\n// Looping a triangle\n// Write a loop that makes seven calls to console.log to output the following triangle:\n\n// #\n// ##\n// ###\n// ####\n// #####\n// ######\n// #######\n\n// let tag = '#'\n// while (tag.length <= 7) {\n//   console.log(tag);\n//   tag += '#'\n// }\n\n// Chessboard\n// Write a program that creates a string that represents an 8×8 grid, using newline characters to separate lines. At each position of the grid there is either a space or a \"#\" character. The characters should form a chessboard.\n\n// Passing this string to console.log should show something like this:\n\n//  # # # #\n// # # # # \n//  # # # #\n// # # # # \n//  # # # #\n// # # # # \n//  # # # #\n// # # # #\n// When you have a program that generates this pattern, define a binding size = 8 and change the program so that it works for any size, outputting a grid of the given width and height.\n\n// let size = 10\n// let board = '';\n// for (let row = 1; row <= size; row++) {\n//   for (let column = 1; column <= size; column++) {\n//     if ((row+column)%2 == 0) {\n//       board += ' '\n//     } else {\n//       board += '#'\n//     }\n//   }\n//   board += '\\n'\n// }\n// console.log(board)\n\n//Chapter 03\n\n// Minimum\n// The previous chapter introduced the standard function Math.min that returns its smallest argument. We can build something like that now. Write a function min that takes two arguments and returns their minimum.\n\n// const min = (num1, num2) => (num1 < num2) ? num1 : num2\n\n// console.log(min(10, 10));\n// // // // → 0\n// console.log(min(0, -10));\n// // // // → -10\n\n// Recursion\n// We’ve seen that % (the remainder operator) can be used to test whether a number is even or odd by using % 2 to see whether it’s divisible by two. Here’s another way to define whether a positive whole number is even or odd:\n\n// Zero is even. //true\n// One is odd. //false\n// For any other number N, its evenness is the same as N - 2.\n\n// Define a recursive function isEven corresponding to this description. The function should accept a single parameter (a positive, whole number) and return a Boolean.\n\n// Test it on 50 and 75. See how it behaves on -1. Why? Can you think of a way to fix this?\n\n// function isEven(num) {\n//   if( num >= 0) {\n//     if (num===0) {\n//       return true\n//     } else if (num === 1) {\n//       return false\n//     } else {\n//       return(isEven(num-2))\n//     }\n//   } else {\n//     return \"negative\"\n//   }\n// }\n\n//console.log(isEven(50));\n// // → true\n//console.log(isEven(75));\n// // → false\n//console.log(isEven(-1));\n// // → ??\n\n// Bean counting\n// You can get the Nth character, or letter, from a string by writing \"string\"[N]. The returned value will be a string containing only one character (for example, \"b\"). The first character has position 0, which causes the last one to be found at position string.length - 1. In other words, a two-character string has length 2, and its characters have positions 0 and 1.\n\n// Write a function countBs that takes a string as its only argument and returns a number that indicates how many uppercase “B” characters there are in the string.\n\n// Next, write a function called countChar that behaves like countBs, except it takes a second argument that indicates the character that is to be counted (rather than counting only uppercase “B” characters). Rewrite countBs to make use of this new function.\n\n// function countBs(str) {\n//   let count = 0;\n//   for (let i=0; i <= str.length-1; i++) {\n//     if (str[i] === \"B\") {\n//       count += 1\n//     }\n//   }\n//   return count;\n// }\n\n//console.log(countBs(\"beachBall\"));\n// // → 2\n\n// function countChar(str,checkChar) {\n//   let count = 0;\n//   for (let i=0; i <= str.length-1; i++) {\n//     (str[i] === checkChar) && (count += 1)\n//   }\n//   return count;\n// }\n\n// console.log(countChar(\"gazelle\", \"l\"));\n// // → 4\n\n// ------------------------------------------------------------------------------- //\n// ------------------------------------------------------------------------------- //\n// ------------------------------------------------------------------------------- // \n\n// Exercises for Javascript part-2\n\n// 1. Translate border-left-width to borderLeftWidth\n// importance: 5\n// Write the function camelize(str) that changes dash-separated words like “my-short-string” into camel-cased “myShortString”.\n\n// That is: removes all dashes, each word after dash becomes uppercased.\n\n// Examples:\n\n// camelize(\"background-color\") == 'backgroundColor';\n// camelize(\"list-style-image\") == 'listStyleImage';\n// camelize(\"-webkit-transition\") == 'WebkitTransition';\n// P.S. Hint: use split to split the string into an array, transform it and join back.\n\n/*ANSWER\nfunction camelize(str) {\n  let newString = str.split(\"-\"); //Turns str \"This-Word\" into a new array that reads [\"This\", \"Word\"]\n  newString = newString.map(function (word, index) {\n    if (index == 0) {\n      return word.toLowerCase(); //lowercases the whole word\n    } else {\n      return word[0].toUpperCase() + word.slice(1).toLowerCase(); //Uppercases index 0 and adds rest of the word minus 1st element and lowercase corrects for the second argument we pass thru \n    }\n  });\n  newString = newString.join(\"\"); //puts it back together \n  return newString;\n}\nconsole.log(camelize(\"This-Word\"));\n\nconsole.log(camelize(\"This-IS-A-longer-String\"));*/\n\n// ------------------------------------------------------\n\n// 2. Filter range\n// importance: 4\n// Write a function filterRange(arr, a, b) that gets an array arr, looks for elements with values higher or equal to a and lower or equal to b and return a result as an array.\n\n// The function should not modify the array. It should return the new array.\n\n// For instance:\n\n/*let arr = [5, 3, 8, 1];\n\nfunction filterRange(arr, a, b) {\n  return arr.filter(item => (a <= item && item <= b))\n}\n\n\nlet filtered = filterRange(arr, 1, 4);\n\nconsole.log( filtered ); // 3,1 (matching values)\n\nconsole.log( arr ); // 5,3,8,1 (not modified)*/\n\n//Find only returns the first found item\n//while filter returns it all\n\n// -------------------------------------------------------------------------------\n\n// 3. Filter range \"in place\"\n// importance: 4\n// Write a function filterRangeInPlace(arr, a, b) that gets an array arr and removes from it all values except those that are between a and b. The test is: a ≤ arr[i] ≤ b.\n\n// The function should only modify the array. It should not return anything.\n\n// For instance:\n\n// let arr = [5, 3, 8, 1];\n\n// function filterRangeInPlace(arr, a, b) {\n//   for (let i = 0; i < arr.length; i++) {\n//     if (arr[i] < a || arr[i] > b) {\n//       arr.splice(i, 1);\n//       i--\n//     }\n//   }\n// }\n\n// filterRangeInPlace(arr, 1, 4); // removed the numbers except from 1 to 4\n\n// console.log(arr); // [3, 1]\n\n// -------------------------------------------------------------------------------\n\n// 4. Sort in decreasing order\n// importance: 4\n// let arr = [5, 12, 1, -10, 8];\n\n// arr.sort((a, b) => b-a);\n\n// console.log( arr ); // 12,8,5,1,-10\n\n// --------------------------------------------------------------------------------\n\n// 5. Copy and sort array\n// importance: 5\n// We have an array of strings arr. We’d like to have a sorted copy of it, but keep arr unmodified.\n\n// Create a function copySorted(arr) that returns such a copy.\n\n// --------------------------------------------------------------------------------\n\n// 6. Create an extendable calculator\n// importance: 5\n// Create a constructor function Calculator that creates “extendable” calculator objects.\n\n// The task consists of two parts.\n\n// First, implement the method calculate(str) that takes a string like \"1 + 2\" in the format “NUMBER operator NUMBER” (space-delimited) and returns the result. Should understand plus + and minus -.\n\n// Usage example:\n\n//let calc = new Calculator;\n\n//console.log( calc.calculate(\"3 + 7\") ); // 10\n\n// function Calculator() {\n\n//   this.methods = {\n//     '+' : (a,b) => a + b,\n//     '-' : (a,b) => a - b\n//   }\n\n//   this.calculate = function(str) {\n//     let splitString = str.split(' '),\n//       a = +splitString[0],\n//       op = splitString[1],\n//       b = +splitString[2];\n\n//   if (isNaN(a) || isNaN (b)) {\n//     return NaN\n//   }\n//   return this.methods[op](a,b);\n//   }\n//   this.addMethod = function(name, func) {\n//     this.methods[name] = func;\n//   }\n// }\n\n// Then add the method addMethod(name, func) that teaches the calculator a new operation. It takes the operator name and the two-argument function func(a,b) that implements it.\n\n// For instance, let’s add the multiplication *, division / and power **:\n\n// let powerCalc = new Calculator;\n// powerCalc.addMethod(\"*\", (a, b) => a * b);\n// powerCalc.addMethod(\"/\", (a, b) => a / b);\n// powerCalc.addMethod(\"**\", (a, b) => a ** b);\n\n// //console.log(powerCalc.methods)\n\n// let result = powerCalc.calculate(\"2 ** 3\");\n// console.log( result ); // 8\n// No parentheses or complex expressions in this task.\n// The numbers and the operator are delimited with exactly one space.\n// There may be error handling if you’d like to add it.\n\n// -------------------------------------------------------------------------------\n\n// 7. Map to names\n// importance: 5\n// You have an array of user objects, each one has user.name. Write the code that converts it into an array of names.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 28 };\n\n// let users = [ john, pete, mary ];\n\n// let names = users.map(item => item.age)\n\n// console.log(names)\n\n// let names = /* ... your code */\n\n// alert( names ); // John, Pete, Mary\n\n// ----------------------------------------------------------------------------------\n\n// 8. Map to objects\n// importance: 5\n// You have an array of user objects, each one has name, surname and id.\n\n// Write the code to create another array from it, of objects with id and fullName, where fullName is generated from name and surname.\n\n// For instance:\n\n// let john = { name: \"John\", surname: \"Smith\", id: 1 };\n// let pete = { name: \"Pete\", surname: \"Hunt\", id: 2 };\n// let mary = { name: \"Mary\", surname: \"Key\", id: 3 };\n\n// let users = [ john, pete, mary ];\n\n// let usersMapped = users.map (user => ({\n//   fullName: `${user.name} ${user.surname}`,\n//   id: user.id\n// }))\n\n// /*\n// usersMapped = [\n//   { fullName: \"John Smith\", id: 1 },\n//   { fullName: \"Pete Hunt\", id: 2 },\n//   { fullName: \"Mary Key\", id: 3 }\n// ]\n// */\n\n//console.log(usersMapped)\n\n// console.log( usersMapped[0].id ) // 1\n// console.log( usersMapped[0].fullName ) // John Smith\n\n// -------------------------------------------------------------------------------\n\n// 9. Sort users by age\n// importance: 5\n// Write the function sortByAge(users) that gets an array of objects with the age property and sorts them by age.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 28 };\n\n// let arr = [ pete, john, mary ];\n\n// function sortByAge(arr) {\n//   arr.sort((a,b) => a.age-b.age)\n// }\n\n// sortByAge(arr);\n\n// // // now: [john, mary, pete]\n// console.log(arr[0].name); // John\n// console.log(arr[1].name); // Mary\n// console.log(arr[2].name); // Pete\n\n// --------------------------------------------------------------------------------\n\n// 10. Shuffle an array\n// importance: 3\n// Write the function shuffle(array) that shuffles (randomly reorders) elements of the array.\n\n// Multiple runs of shuffle may lead to different orders of elements. For instance:\n\n// let arr = [1, 2, 3];\n\n// shuffle(arr);\n// // arr = [3, 2, 1]\n\n// shuffle(arr);\n// // arr = [2, 1, 3]\n\n// shuffle(arr);\n// // arr = [3, 1, 2]\n// // ...\n\n// function shuffle(array) {\n//   for (let i = array.length - 1; i > 0; i--) {\n//     let j = Math.floor(Math.random() * (i+1));\n//     [array[i], array[j]] = [array[j], array[i]];\n//   }\n// }\n\n// ---------------------------------------------------------------------------------\n\n// 11. Get average age\n// importance: 4\n// Write the function getAverageAge(users) that gets an array of objects with property age and returns the average age.\n\n// The formula for the average is (age1 + age2 + ... + ageN) / N.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 29 };\n\n// let arr = [ john, pete, mary ];\n\n// function getAverageAge(users) {\n//   return users.reduce((prev, user) => prev + user.age,0) / users.length\n// }\n\n// console.log( getAverageAge(arr) ); // (25 + 30 + 29) / 3 = 28\n\n// ---------------------------------------------------------------------------------\n\n// 12. Filter unique array members\n// importance: 4\n// Let arr be an array.\n\n// Create a function unique(arr) that should return an array with unique items of arr.\n\n// For instance:\n\n// function unique(arr) {\n//   let result = []\n\n//   for (let str of arr) {\n//     if (!result.includes(str)) {\n//       result.push(str);\n//     }\n//   }\n//   return result;\n// }\n\n// let strings = [\"Hare\", \"Krishna\", \"Hare\", \"Krishna\",\n//   \"Krishna\", \"Krishna\", \"Hare\", \"Hare\", \":-O\"\n// ];\n\n//console.log( unique(strings) ); // Hare, Krishna, :-O\n\n// -------------------------------------------------------------------------------\n\n// 13. Create keyed object from array\n// importance: 4\n// Let’s say we received an array of users in the form {id:..., name:..., age:... }.\n\n// Create a function groupById(arr) that creates an object from it, with id as the key, and array items as values.\n\n// For example:\n\n// let users = [\n//   {id: 'john', name: \"John Smith\", age: 20},\n//   {id: 'ann', name: \"Ann Smith\", age: 24},\n//   {id: 'pete', name: \"Pete Peterson\", age: 31},\n// ];\n\n// let usersById = groupById(users);\n\n// function groupById(array) {\n//   return array.reduce((obj, value) => {\n//     obj[value.id] = value\n//     return obj\n//   }, {})\n// }\n\n// function groupById(arr) {\n//   let result = {}\n//   arr.forEach( (item) => result[item.id] = item )\n//   return result;\n// }\n\n// console.log(usersById)\n\n// /*\n// // after the call we should have:\n\n// usersById = {\n//   john: {id: 'john', name: \"John Smith\", age: 20},\n//   ann: {id: 'ann', name: \"Ann Smith\", age: 24},\n//   pete: {id: 'pete', name: \"Pete Peterson\", age: 31},\n// }\n// */\n// Such function is really handy when working with server data.\n\n// In this task we assume that id is unique. There may be no two array items with the same id.\n\n// Please use array .reduce method in the solution."},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":2,"column":0}},{"generated":{"line":4,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":4,"column":0}},{"generated":{"line":6,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":7,"column":0}},{"generated":{"line":9,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":15,"column":0}},{"generated":{"line":17,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":19,"column":0}},{"generated":{"line":20,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":20,"column":0}},{"generated":{"line":21,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":21,"column":0}},{"generated":{"line":23,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":23,"column":0}},{"generated":{"line":24,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":24,"column":0}},{"generated":{"line":26,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":26,"column":0}},{"generated":{"line":28,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":28,"column":0}},{"generated":{"line":29,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":32,"column":0}},{"generated":{"line":33,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":33,"column":0}},{"generated":{"line":34,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":35,"column":0}},{"generated":{"line":36,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":36,"column":0}},{"generated":{"line":38,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":39,"column":0}},{"generated":{"line":40,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":40,"column":0}},{"generated":{"line":41,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":43,"column":0}},{"generated":{"line":44,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":44,"column":0}},{"generated":{"line":45,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":45,"column":0}},{"generated":{"line":46,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":46,"column":0}},{"generated":{"line":47,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":47,"column":0}},{"generated":{"line":48,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":48,"column":0}},{"generated":{"line":49,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":49,"column":0}},{"generated":{"line":50,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":50,"column":0}},{"generated":{"line":52,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":52,"column":0}},{"generated":{"line":54,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":54,"column":0}},{"generated":{"line":55,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":55,"column":0}},{"generated":{"line":57,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":57,"column":0}},{"generated":{"line":59,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":59,"column":0}},{"generated":{"line":60,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":60,"column":0}},{"generated":{"line":61,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":61,"column":0}},{"generated":{"line":62,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":62,"column":0}},{"generated":{"line":64,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":64,"column":0}},{"generated":{"line":65,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":65,"column":0}},{"generated":{"line":67,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":67,"column":0}},{"generated":{"line":68,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":68,"column":0}},{"generated":{"line":69,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":69,"column":0}},{"generated":{"line":71,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":71,"column":0}},{"generated":{"line":73,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":73,"column":0}},{"generated":{"line":75,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":75,"column":0}},{"generated":{"line":76,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":76,"column":0}},{"generated":{"line":77,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":77,"column":0}},{"generated":{"line":78,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":78,"column":0}},{"generated":{"line":79,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":79,"column":0}},{"generated":{"line":80,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":80,"column":0}},{"generated":{"line":81,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":81,"column":0}},{"generated":{"line":82,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":82,"column":0}},{"generated":{"line":83,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":83,"column":0}},{"generated":{"line":84,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":84,"column":0}},{"generated":{"line":85,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":85,"column":0}},{"generated":{"line":86,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":86,"column":0}},{"generated":{"line":87,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":87,"column":0}},{"generated":{"line":89,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":89,"column":0}},{"generated":{"line":90,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":90,"column":0}},{"generated":{"line":91,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":91,"column":0}},{"generated":{"line":92,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":92,"column":0}},{"generated":{"line":93,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":93,"column":0}},{"generated":{"line":94,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":94,"column":0}},{"generated":{"line":96,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":96,"column":0}},{"generated":{"line":97,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":97,"column":0}},{"generated":{"line":99,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":99,"column":0}},{"generated":{"line":101,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":101,"column":0}},{"generated":{"line":103,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":103,"column":0}},{"generated":{"line":104,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":104,"column":0}},{"generated":{"line":105,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":105,"column":0}},{"generated":{"line":106,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":106,"column":0}},{"generated":{"line":107,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":107,"column":0}},{"generated":{"line":108,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":108,"column":0}},{"generated":{"line":109,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":109,"column":0}},{"generated":{"line":110,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":110,"column":0}},{"generated":{"line":111,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":111,"column":0}},{"generated":{"line":113,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":113,"column":0}},{"generated":{"line":114,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":114,"column":0}},{"generated":{"line":116,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":116,"column":0}},{"generated":{"line":117,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":117,"column":0}},{"generated":{"line":118,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":118,"column":0}},{"generated":{"line":119,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":119,"column":0}},{"generated":{"line":120,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":120,"column":0}},{"generated":{"line":121,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":121,"column":0}},{"generated":{"line":122,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":122,"column":0}},{"generated":{"line":124,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":124,"column":0}},{"generated":{"line":125,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":125,"column":0}},{"generated":{"line":127,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":131,"column":0}},{"generated":{"line":128,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":132,"column":0}},{"generated":{"line":129,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":133,"column":0}},{"generated":{"line":131,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":135,"column":0}},{"generated":{"line":133,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":141,"column":0}},{"generated":{"line":134,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":142,"column":0}},{"generated":{"line":135,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":143,"column":0}},{"generated":{"line":137,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":145,"column":0}},{"generated":{"line":139,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":147,"column":0}},{"generated":{"line":141,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":149,"column":0}},{"generated":{"line":142,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":150,"column":0}},{"generated":{"line":143,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":151,"column":0}},{"generated":{"line":144,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":152,"column":0}},{"generated":{"line":146,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":154,"column":0}},{"generated":{"line":147,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":155,"column":0}},{"generated":{"line":148,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":156,"column":0}},{"generated":{"line":149,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":157,"column":0}},{"generated":{"line":150,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":158,"column":0}},{"generated":{"line":151,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":159,"column":0}},{"generated":{"line":152,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":160,"column":0}},{"generated":{"line":153,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":161,"column":0}},{"generated":{"line":154,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":162,"column":0}},{"generated":{"line":155,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":163,"column":0}},{"generated":{"line":156,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":164,"column":0}},{"generated":{"line":157,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":165,"column":0}},{"generated":{"line":158,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":166,"column":0}},{"generated":{"line":159,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":167,"column":0}},{"generated":{"line":160,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":168,"column":0}},{"generated":{"line":161,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":169,"column":0}},{"generated":{"line":163,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":171,"column":0}},{"generated":{"line":165,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":173,"column":0}},{"generated":{"line":166,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":174,"column":0}},{"generated":{"line":167,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":175,"column":0}},{"generated":{"line":169,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":177,"column":0}},{"generated":{"line":171,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":179,"column":0}},{"generated":{"line":173,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":181,"column":0}},{"generated":{"line":174,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":182,"column":0}},{"generated":{"line":175,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":183,"column":0}},{"generated":{"line":176,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":184,"column":0}},{"generated":{"line":177,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":185,"column":0}},{"generated":{"line":178,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":186,"column":0}},{"generated":{"line":179,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":187,"column":0}},{"generated":{"line":180,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":188,"column":0}},{"generated":{"line":181,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":189,"column":0}},{"generated":{"line":182,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":190,"column":0}},{"generated":{"line":183,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":191,"column":0}},{"generated":{"line":184,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":192,"column":0}},{"generated":{"line":186,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":194,"column":0}},{"generated":{"line":187,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":195,"column":0}},{"generated":{"line":189,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":197,"column":0}},{"generated":{"line":191,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":199,"column":0}},{"generated":{"line":192,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":200,"column":0}},{"generated":{"line":193,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":201,"column":0}},{"generated":{"line":195,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":203,"column":0}},{"generated":{"line":197,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":205,"column":0}},{"generated":{"line":199,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":207,"column":0}},{"generated":{"line":201,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":209,"column":0}},{"generated":{"line":202,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":210,"column":0}},{"generated":{"line":203,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":211,"column":0}},{"generated":{"line":204,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":212,"column":0}},{"generated":{"line":205,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":213,"column":0}},{"generated":{"line":206,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":214,"column":0}},{"generated":{"line":207,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":215,"column":0}},{"generated":{"line":208,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":216,"column":0}},{"generated":{"line":210,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":218,"column":0}},{"generated":{"line":212,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":220,"column":0}},{"generated":{"line":214,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":222,"column":0}},{"generated":{"line":216,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":224,"column":0}},{"generated":{"line":217,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":225,"column":0}},{"generated":{"line":218,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":226,"column":0}},{"generated":{"line":220,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":228,"column":0}},{"generated":{"line":222,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":230,"column":0}},{"generated":{"line":224,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":232,"column":0}},{"generated":{"line":226,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":234,"column":0}},{"generated":{"line":227,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":235,"column":0}},{"generated":{"line":228,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":236,"column":0}},{"generated":{"line":230,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":238,"column":0}},{"generated":{"line":232,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":241,"column":0}},{"generated":{"line":234,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":243,"column":0}},{"generated":{"line":235,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":244,"column":0}},{"generated":{"line":236,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":245,"column":0}},{"generated":{"line":238,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":247,"column":0}},{"generated":{"line":240,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":249,"column":0}},{"generated":{"line":242,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":251,"column":0}},{"generated":{"line":244,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":253,"column":0}},{"generated":{"line":246,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":255,"column":0}},{"generated":{"line":248,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":257,"column":0}},{"generated":{"line":250,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":259,"column":0}},{"generated":{"line":251,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":260,"column":0}},{"generated":{"line":252,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":261,"column":0}},{"generated":{"line":253,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":262,"column":0}},{"generated":{"line":255,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":264,"column":0}},{"generated":{"line":256,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":265,"column":0}},{"generated":{"line":257,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":266,"column":0}},{"generated":{"line":258,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":267,"column":0}},{"generated":{"line":259,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":268,"column":0}},{"generated":{"line":261,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":270,"column":0}},{"generated":{"line":262,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":271,"column":0}},{"generated":{"line":263,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":272,"column":0}},{"generated":{"line":264,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":273,"column":0}},{"generated":{"line":265,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":274,"column":0}},{"generated":{"line":266,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":275,"column":0}},{"generated":{"line":267,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":276,"column":0}},{"generated":{"line":268,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":277,"column":0}},{"generated":{"line":269,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":278,"column":0}},{"generated":{"line":271,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":280,"column":0}},{"generated":{"line":273,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":282,"column":0}},{"generated":{"line":275,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":284,"column":0}},{"generated":{"line":276,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":285,"column":0}},{"generated":{"line":277,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":286,"column":0}},{"generated":{"line":278,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":287,"column":0}},{"generated":{"line":280,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":289,"column":0}},{"generated":{"line":282,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":291,"column":0}},{"generated":{"line":283,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":292,"column":0}},{"generated":{"line":284,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":293,"column":0}},{"generated":{"line":285,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":294,"column":0}},{"generated":{"line":286,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":295,"column":0}},{"generated":{"line":288,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":297,"column":0}},{"generated":{"line":290,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":299,"column":0}},{"generated":{"line":291,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":300,"column":0}},{"generated":{"line":292,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":301,"column":0}},{"generated":{"line":294,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":303,"column":0}},{"generated":{"line":296,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":305,"column":0}},{"generated":{"line":297,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":306,"column":0}},{"generated":{"line":298,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":307,"column":0}},{"generated":{"line":300,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":309,"column":0}},{"generated":{"line":302,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":311,"column":0}},{"generated":{"line":304,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":313,"column":0}},{"generated":{"line":306,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":315,"column":0}},{"generated":{"line":308,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":317,"column":0}},{"generated":{"line":310,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":319,"column":0}},{"generated":{"line":312,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":321,"column":0}},{"generated":{"line":313,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":322,"column":0}},{"generated":{"line":314,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":323,"column":0}},{"generated":{"line":316,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":325,"column":0}},{"generated":{"line":318,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":327,"column":0}},{"generated":{"line":320,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":329,"column":0}},{"generated":{"line":321,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":330,"column":0}},{"generated":{"line":322,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":331,"column":0}},{"generated":{"line":324,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":333,"column":0}},{"generated":{"line":326,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":335,"column":0}},{"generated":{"line":327,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":336,"column":0}},{"generated":{"line":328,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":337,"column":0}},{"generated":{"line":329,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":338,"column":0}},{"generated":{"line":331,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":340,"column":0}},{"generated":{"line":332,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":341,"column":0}},{"generated":{"line":333,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":342,"column":0}},{"generated":{"line":334,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":343,"column":0}},{"generated":{"line":335,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":344,"column":0}},{"generated":{"line":336,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":345,"column":0}},{"generated":{"line":337,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":346,"column":0}},{"generated":{"line":339,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":348,"column":0}},{"generated":{"line":341,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":350,"column":0}},{"generated":{"line":342,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":351,"column":0}},{"generated":{"line":344,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":353,"column":0}},{"generated":{"line":346,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":355,"column":0}},{"generated":{"line":347,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":356,"column":0}},{"generated":{"line":348,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":357,"column":0}},{"generated":{"line":350,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":359,"column":0}},{"generated":{"line":352,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":361,"column":0}},{"generated":{"line":353,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":362,"column":0}},{"generated":{"line":354,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":363,"column":0}},{"generated":{"line":356,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":365,"column":0}},{"generated":{"line":358,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":367,"column":0}},{"generated":{"line":359,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":368,"column":0}},{"generated":{"line":360,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":369,"column":0}},{"generated":{"line":362,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":371,"column":0}},{"generated":{"line":364,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":373,"column":0}},{"generated":{"line":365,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":374,"column":0}},{"generated":{"line":366,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":375,"column":0}},{"generated":{"line":367,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":376,"column":0}},{"generated":{"line":369,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":378,"column":0}},{"generated":{"line":371,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":380,"column":0}},{"generated":{"line":372,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":381,"column":0}},{"generated":{"line":373,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":382,"column":0}},{"generated":{"line":375,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":384,"column":0}},{"generated":{"line":377,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":386,"column":0}},{"generated":{"line":379,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":388,"column":0}},{"generated":{"line":380,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":389,"column":0}},{"generated":{"line":382,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":391,"column":0}},{"generated":{"line":383,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":392,"column":0}},{"generated":{"line":385,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":394,"column":0}},{"generated":{"line":386,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":395,"column":0}},{"generated":{"line":387,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":396,"column":0}},{"generated":{"line":389,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":398,"column":0}},{"generated":{"line":390,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":399,"column":0}},{"generated":{"line":391,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":400,"column":0}},{"generated":{"line":392,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":401,"column":0}},{"generated":{"line":393,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":402,"column":0}},{"generated":{"line":394,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":403,"column":0}},{"generated":{"line":396,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":405,"column":0}},{"generated":{"line":398,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":407,"column":0}},{"generated":{"line":399,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":408,"column":0}},{"generated":{"line":400,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":409,"column":0}},{"generated":{"line":402,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":411,"column":0}},{"generated":{"line":404,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":413,"column":0}},{"generated":{"line":406,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":415,"column":0}},{"generated":{"line":407,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":416,"column":0}},{"generated":{"line":408,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":417,"column":0}},{"generated":{"line":410,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":419,"column":0}},{"generated":{"line":412,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":421,"column":0}},{"generated":{"line":413,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":422,"column":0}},{"generated":{"line":414,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":423,"column":0}},{"generated":{"line":416,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":425,"column":0}},{"generated":{"line":418,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":427,"column":0}},{"generated":{"line":420,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":429,"column":0}},{"generated":{"line":421,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":430,"column":0}},{"generated":{"line":422,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":431,"column":0}},{"generated":{"line":424,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":433,"column":0}},{"generated":{"line":426,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":435,"column":0}},{"generated":{"line":428,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":437,"column":0}},{"generated":{"line":429,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":438,"column":0}},{"generated":{"line":431,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":440,"column":0}},{"generated":{"line":432,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":441,"column":0}},{"generated":{"line":433,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":442,"column":0}},{"generated":{"line":434,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":443,"column":0}},{"generated":{"line":435,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":444,"column":0}},{"generated":{"line":436,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":445,"column":0}},{"generated":{"line":437,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":446,"column":0}},{"generated":{"line":439,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":448,"column":0}},{"generated":{"line":440,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":449,"column":0}},{"generated":{"line":441,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":450,"column":0}},{"generated":{"line":443,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":452,"column":0}},{"generated":{"line":445,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":454,"column":0}},{"generated":{"line":447,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":456,"column":0}},{"generated":{"line":448,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":457,"column":0}},{"generated":{"line":449,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":458,"column":0}},{"generated":{"line":451,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":460,"column":0}},{"generated":{"line":453,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":462,"column":0}},{"generated":{"line":455,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":464,"column":0}},{"generated":{"line":456,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":465,"column":0}},{"generated":{"line":457,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":466,"column":0}},{"generated":{"line":458,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":467,"column":0}},{"generated":{"line":459,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":468,"column":0}},{"generated":{"line":461,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":470,"column":0}},{"generated":{"line":463,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":472,"column":0}},{"generated":{"line":464,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":473,"column":0}},{"generated":{"line":465,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":474,"column":0}},{"generated":{"line":466,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":475,"column":0}},{"generated":{"line":467,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":476,"column":0}},{"generated":{"line":468,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":477,"column":0}},{"generated":{"line":470,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":479,"column":0}},{"generated":{"line":471,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":480,"column":0}},{"generated":{"line":472,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":481,"column":0}},{"generated":{"line":473,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":482,"column":0}},{"generated":{"line":474,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":483,"column":0}},{"generated":{"line":476,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":485,"column":0}},{"generated":{"line":478,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":487,"column":0}},{"generated":{"line":479,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":488,"column":0}},{"generated":{"line":481,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":490,"column":0}},{"generated":{"line":482,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":491,"column":0}},{"generated":{"line":483,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":492,"column":0}},{"generated":{"line":484,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":493,"column":0}},{"generated":{"line":485,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":494,"column":0}},{"generated":{"line":486,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":495,"column":0}},{"generated":{"line":487,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":496,"column":0}},{"generated":{"line":489,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":498,"column":0}},{"generated":{"line":491,"column":0},"source":"../js/Eloquent-js_answers.js","original":{"line":500,"column":0}}],"sources":{"../js/Eloquent-js_answers.js":"//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//Eloquent Javascript\n\n//Chapter 02\n\n// Looping a triangle\n// Write a loop that makes seven calls to console.log to output the following triangle:\n\n// #\n// ##\n// ###\n// ####\n// #####\n// ######\n// #######\n\n// let tag = '#'\n// while (tag.length <= 7) {\n//   console.log(tag);\n//   tag += '#'\n// }\n\n// Chessboard\n// Write a program that creates a string that represents an 8×8 grid, using newline characters to separate lines. At each position of the grid there is either a space or a \"#\" character. The characters should form a chessboard.\n\n// Passing this string to console.log should show something like this:\n\n//  # # # #\n// # # # # \n//  # # # #\n// # # # # \n//  # # # #\n// # # # # \n//  # # # #\n// # # # #\n// When you have a program that generates this pattern, define a binding size = 8 and change the program so that it works for any size, outputting a grid of the given width and height.\n\n// let size = 10\n// let board = '';\n// for (let row = 1; row <= size; row++) {\n//   for (let column = 1; column <= size; column++) {\n//     if ((row+column)%2 == 0) {\n//       board += ' '\n//     } else {\n//       board += '#'\n//     }\n//   }\n//   board += '\\n'\n// }\n// console.log(board)\n\n//Chapter 03\n\n// Minimum\n// The previous chapter introduced the standard function Math.min that returns its smallest argument. We can build something like that now. Write a function min that takes two arguments and returns their minimum.\n\n// const min = (num1, num2) => (num1 < num2) ? num1 : num2\n\n// console.log(min(10, 10));\n// // // // → 0\n// console.log(min(0, -10));\n// // // // → -10\n\n// Recursion\n// We’ve seen that % (the remainder operator) can be used to test whether a number is even or odd by using % 2 to see whether it’s divisible by two. Here’s another way to define whether a positive whole number is even or odd:\n\n// Zero is even. //true\n// One is odd. //false\n// For any other number N, its evenness is the same as N - 2.\n\n// Define a recursive function isEven corresponding to this description. The function should accept a single parameter (a positive, whole number) and return a Boolean.\n\n// Test it on 50 and 75. See how it behaves on -1. Why? Can you think of a way to fix this?\n\n// function isEven(num) {\n//   if( num >= 0) {\n//     if (num===0) {\n//       return true\n//     } else if (num === 1) {\n//       return false\n//     } else {\n//       return(isEven(num-2))\n//     }\n//   } else {\n//     return \"negative\"\n//   }\n// }\n\n//console.log(isEven(50));\n// // → true\n//console.log(isEven(75));\n// // → false\n//console.log(isEven(-1));\n// // → ??\n\n// Bean counting\n// You can get the Nth character, or letter, from a string by writing \"string\"[N]. The returned value will be a string containing only one character (for example, \"b\"). The first character has position 0, which causes the last one to be found at position string.length - 1. In other words, a two-character string has length 2, and its characters have positions 0 and 1.\n\n// Write a function countBs that takes a string as its only argument and returns a number that indicates how many uppercase “B” characters there are in the string.\n\n// Next, write a function called countChar that behaves like countBs, except it takes a second argument that indicates the character that is to be counted (rather than counting only uppercase “B” characters). Rewrite countBs to make use of this new function.\n\n// function countBs(str) {\n//   let count = 0;\n//   for (let i=0; i <= str.length-1; i++) {\n//     if (str[i] === \"B\") {\n//       count += 1\n//     }\n//   }\n//   return count;\n// }\n\n//console.log(countBs(\"beachBall\"));\n// // → 2\n\n// function countChar(str,checkChar) {\n//   let count = 0;\n//   for (let i=0; i <= str.length-1; i++) {\n//     (str[i] === checkChar) && (count += 1)\n//   }\n//   return count;\n// }\n\n// console.log(countChar(\"gazelle\", \"l\"));\n// // → 4\n\n\n\n\n\n// ------------------------------------------------------------------------------- //\n// ------------------------------------------------------------------------------- //\n// ------------------------------------------------------------------------------- // \n\n// Exercises for Javascript part-2\n\n\n\n\n\n// 1. Translate border-left-width to borderLeftWidth\n// importance: 5\n// Write the function camelize(str) that changes dash-separated words like “my-short-string” into camel-cased “myShortString”.\n\n// That is: removes all dashes, each word after dash becomes uppercased.\n\n// Examples:\n\n// camelize(\"background-color\") == 'backgroundColor';\n// camelize(\"list-style-image\") == 'listStyleImage';\n// camelize(\"-webkit-transition\") == 'WebkitTransition';\n// P.S. Hint: use split to split the string into an array, transform it and join back.\n\n/*ANSWER\nfunction camelize(str) {\n  let newString = str.split(\"-\"); //Turns str \"This-Word\" into a new array that reads [\"This\", \"Word\"]\n  newString = newString.map(function (word, index) {\n    if (index == 0) {\n      return word.toLowerCase(); //lowercases the whole word\n    } else {\n      return word[0].toUpperCase() + word.slice(1).toLowerCase(); //Uppercases index 0 and adds rest of the word minus 1st element and lowercase corrects for the second argument we pass thru \n    }\n  });\n  newString = newString.join(\"\"); //puts it back together \n  return newString;\n}\nconsole.log(camelize(\"This-Word\"));\n\nconsole.log(camelize(\"This-IS-A-longer-String\"));*/\n\n// ------------------------------------------------------\n\n// 2. Filter range\n// importance: 4\n// Write a function filterRange(arr, a, b) that gets an array arr, looks for elements with values higher or equal to a and lower or equal to b and return a result as an array.\n\n// The function should not modify the array. It should return the new array.\n\n// For instance:\n\n/*let arr = [5, 3, 8, 1];\n\nfunction filterRange(arr, a, b) {\n  return arr.filter(item => (a <= item && item <= b))\n}\n\n\nlet filtered = filterRange(arr, 1, 4);\n\nconsole.log( filtered ); // 3,1 (matching values)\n\nconsole.log( arr ); // 5,3,8,1 (not modified)*/\n\n//Find only returns the first found item\n//while filter returns it all\n\n// -------------------------------------------------------------------------------\n\n// 3. Filter range \"in place\"\n// importance: 4\n// Write a function filterRangeInPlace(arr, a, b) that gets an array arr and removes from it all values except those that are between a and b. The test is: a ≤ arr[i] ≤ b.\n\n// The function should only modify the array. It should not return anything.\n\n// For instance:\n\n// let arr = [5, 3, 8, 1];\n\n// function filterRangeInPlace(arr, a, b) {\n//   for (let i = 0; i < arr.length; i++) {\n//     if (arr[i] < a || arr[i] > b) {\n//       arr.splice(i, 1);\n//       i--\n//     }\n//   }\n// }\n\n// filterRangeInPlace(arr, 1, 4); // removed the numbers except from 1 to 4\n\n// console.log(arr); // [3, 1]\n\n// -------------------------------------------------------------------------------\n\n// 4. Sort in decreasing order\n// importance: 4\n// let arr = [5, 12, 1, -10, 8];\n\n// arr.sort((a, b) => b-a);\n\n// console.log( arr ); // 12,8,5,1,-10\n\n// --------------------------------------------------------------------------------\n\n// 5. Copy and sort array\n// importance: 5\n// We have an array of strings arr. We’d like to have a sorted copy of it, but keep arr unmodified.\n\n// Create a function copySorted(arr) that returns such a copy.\n\n\n// --------------------------------------------------------------------------------\n\n// 6. Create an extendable calculator\n// importance: 5\n// Create a constructor function Calculator that creates “extendable” calculator objects.\n\n// The task consists of two parts.\n\n// First, implement the method calculate(str) that takes a string like \"1 + 2\" in the format “NUMBER operator NUMBER” (space-delimited) and returns the result. Should understand plus + and minus -.\n\n// Usage example:\n\n//let calc = new Calculator;\n\n//console.log( calc.calculate(\"3 + 7\") ); // 10\n\n// function Calculator() {\n\n//   this.methods = {\n//     '+' : (a,b) => a + b,\n//     '-' : (a,b) => a - b\n//   }\n\n//   this.calculate = function(str) {\n//     let splitString = str.split(' '),\n//       a = +splitString[0],\n//       op = splitString[1],\n//       b = +splitString[2];\n\n//   if (isNaN(a) || isNaN (b)) {\n//     return NaN\n//   }\n//   return this.methods[op](a,b);\n//   }\n//   this.addMethod = function(name, func) {\n//     this.methods[name] = func;\n//   }\n// }\n\n// Then add the method addMethod(name, func) that teaches the calculator a new operation. It takes the operator name and the two-argument function func(a,b) that implements it.\n\n// For instance, let’s add the multiplication *, division / and power **:\n\n// let powerCalc = new Calculator;\n// powerCalc.addMethod(\"*\", (a, b) => a * b);\n// powerCalc.addMethod(\"/\", (a, b) => a / b);\n// powerCalc.addMethod(\"**\", (a, b) => a ** b);\n\n// //console.log(powerCalc.methods)\n\n// let result = powerCalc.calculate(\"2 ** 3\");\n// console.log( result ); // 8\n// No parentheses or complex expressions in this task.\n// The numbers and the operator are delimited with exactly one space.\n// There may be error handling if you’d like to add it.\n\n// -------------------------------------------------------------------------------\n\n// 7. Map to names\n// importance: 5\n// You have an array of user objects, each one has user.name. Write the code that converts it into an array of names.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 28 };\n\n// let users = [ john, pete, mary ];\n\n// let names = users.map(item => item.age)\n\n// console.log(names)\n\n// let names = /* ... your code */\n\n// alert( names ); // John, Pete, Mary\n\n// ----------------------------------------------------------------------------------\n\n// 8. Map to objects\n// importance: 5\n// You have an array of user objects, each one has name, surname and id.\n\n// Write the code to create another array from it, of objects with id and fullName, where fullName is generated from name and surname.\n\n// For instance:\n\n// let john = { name: \"John\", surname: \"Smith\", id: 1 };\n// let pete = { name: \"Pete\", surname: \"Hunt\", id: 2 };\n// let mary = { name: \"Mary\", surname: \"Key\", id: 3 };\n\n// let users = [ john, pete, mary ];\n\n// let usersMapped = users.map (user => ({\n//   fullName: `${user.name} ${user.surname}`,\n//   id: user.id\n// }))\n\n// /*\n// usersMapped = [\n//   { fullName: \"John Smith\", id: 1 },\n//   { fullName: \"Pete Hunt\", id: 2 },\n//   { fullName: \"Mary Key\", id: 3 }\n// ]\n// */\n\n//console.log(usersMapped)\n\n// console.log( usersMapped[0].id ) // 1\n// console.log( usersMapped[0].fullName ) // John Smith\n\n// -------------------------------------------------------------------------------\n\n// 9. Sort users by age\n// importance: 5\n// Write the function sortByAge(users) that gets an array of objects with the age property and sorts them by age.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 28 };\n\n// let arr = [ pete, john, mary ];\n\n// function sortByAge(arr) {\n//   arr.sort((a,b) => a.age-b.age)\n// }\n\n// sortByAge(arr);\n\n// // // now: [john, mary, pete]\n// console.log(arr[0].name); // John\n// console.log(arr[1].name); // Mary\n// console.log(arr[2].name); // Pete\n\n// --------------------------------------------------------------------------------\n\n// 10. Shuffle an array\n// importance: 3\n// Write the function shuffle(array) that shuffles (randomly reorders) elements of the array.\n\n// Multiple runs of shuffle may lead to different orders of elements. For instance:\n\n// let arr = [1, 2, 3];\n\n// shuffle(arr);\n// // arr = [3, 2, 1]\n\n// shuffle(arr);\n// // arr = [2, 1, 3]\n\n// shuffle(arr);\n// // arr = [3, 1, 2]\n// // ...\n\n// function shuffle(array) {\n//   for (let i = array.length - 1; i > 0; i--) {\n//     let j = Math.floor(Math.random() * (i+1));\n//     [array[i], array[j]] = [array[j], array[i]];\n//   }\n// }\n\n// ---------------------------------------------------------------------------------\n\n// 11. Get average age\n// importance: 4\n// Write the function getAverageAge(users) that gets an array of objects with property age and returns the average age.\n\n// The formula for the average is (age1 + age2 + ... + ageN) / N.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 29 };\n\n// let arr = [ john, pete, mary ];\n\n// function getAverageAge(users) {\n//   return users.reduce((prev, user) => prev + user.age,0) / users.length\n// }\n\n// console.log( getAverageAge(arr) ); // (25 + 30 + 29) / 3 = 28\n\n// ---------------------------------------------------------------------------------\n\n// 12. Filter unique array members\n// importance: 4\n// Let arr be an array.\n\n// Create a function unique(arr) that should return an array with unique items of arr.\n\n// For instance:\n\n// function unique(arr) {\n//   let result = []\n\n//   for (let str of arr) {\n//     if (!result.includes(str)) {\n//       result.push(str);\n//     }\n//   }\n//   return result;\n// }\n\n// let strings = [\"Hare\", \"Krishna\", \"Hare\", \"Krishna\",\n//   \"Krishna\", \"Krishna\", \"Hare\", \"Hare\", \":-O\"\n// ];\n\n//console.log( unique(strings) ); // Hare, Krishna, :-O\n\n// -------------------------------------------------------------------------------\n\n// 13. Create keyed object from array\n// importance: 4\n// Let’s say we received an array of users in the form {id:..., name:..., age:... }.\n\n// Create a function groupById(arr) that creates an object from it, with id as the key, and array items as values.\n\n// For example:\n\n// let users = [\n//   {id: 'john', name: \"John Smith\", age: 20},\n//   {id: 'ann', name: \"Ann Smith\", age: 24},\n//   {id: 'pete', name: \"Pete Peterson\", age: 31},\n// ];\n\n// let usersById = groupById(users);\n\n// function groupById(array) {\n//   return array.reduce((obj, value) => {\n//     obj[value.id] = value\n//     return obj\n//   }, {})\n// }\n\n// function groupById(arr) {\n//   let result = {}\n//   arr.forEach( (item) => result[item.id] = item )\n//   return result;\n// }\n\n// console.log(usersById)\n\n// /*\n// // after the call we should have:\n\n// usersById = {\n//   john: {id: 'john', name: \"John Smith\", age: 20},\n//   ann: {id: 'ann', name: \"Ann Smith\", age: 24},\n//   pete: {id: 'pete', name: \"Pete Peterson\", age: 31},\n// }\n// */\n// Such function is really handy when working with server data.\n\n// In this task we assume that id is unique. There may be no two array items with the same id.\n\n// Please use array .reduce method in the solution.\n"},"lineCount":null}},"error":null,"hash":"630739564ae4f4e76dd84e134cb2e2e3","cacheData":{"env":{}}}
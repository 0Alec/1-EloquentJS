{"version":3,"sources":["../js/Eloquent-js_answers.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAMA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"Eloquent-js_answers.5fb33ab6.js","sourceRoot":"../src","sourcesContent":["//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//Eloquent Javascript\n\n//Chapter 02\n\n// Looping a triangle\n// Write a loop that makes seven calls to console.log to output the following triangle:\n\n// #\n// ##\n// ###\n// ####\n// #####\n// ######\n// #######\n\n// let tag = '#'\n// while (tag.length <= 7) {\n//   console.log(tag);\n//   tag += '#'\n// }\n\n// Chessboard\n// Write a program that creates a string that represents an 8×8 grid, using newline characters to separate lines. At each position of the grid there is either a space or a \"#\" character. The characters should form a chessboard.\n\n// Passing this string to console.log should show something like this:\n\n//  # # # #\n// # # # # \n//  # # # #\n// # # # # \n//  # # # #\n// # # # # \n//  # # # #\n// # # # #\n// When you have a program that generates this pattern, define a binding size = 8 and change the program so that it works for any size, outputting a grid of the given width and height.\n\n// let size = 10\n// let board = '';\n// for (let row = 1; row <= size; row++) {\n//   for (let column = 1; column <= size; column++) {\n//     if ((row+column)%2 == 0) {\n//       board += ' '\n//     } else {\n//       board += '#'\n//     }\n//   }\n//   board += '\\n'\n// }\n// console.log(board)\n\n//Chapter 03\n\n// Minimum\n// The previous chapter introduced the standard function Math.min that returns its smallest argument. We can build something like that now. Write a function min that takes two arguments and returns their minimum.\n\n// const min = (num1, num2) => (num1 < num2) ? num1 : num2\n\n// console.log(min(10, 10));\n// // // // → 0\n// console.log(min(0, -10));\n// // // // → -10\n\n// Recursion\n// We’ve seen that % (the remainder operator) can be used to test whether a number is even or odd by using % 2 to see whether it’s divisible by two. Here’s another way to define whether a positive whole number is even or odd:\n\n// Zero is even. //true\n// One is odd. //false\n// For any other number N, its evenness is the same as N - 2.\n\n// Define a recursive function isEven corresponding to this description. The function should accept a single parameter (a positive, whole number) and return a Boolean.\n\n// Test it on 50 and 75. See how it behaves on -1. Why? Can you think of a way to fix this?\n\n// function isEven(num) {\n//   if( num >= 0) {\n//     if (num===0) {\n//       return true\n//     } else if (num === 1) {\n//       return false\n//     } else {\n//       return(isEven(num-2))\n//     }\n//   } else {\n//     return \"negative\"\n//   }\n// }\n\n//console.log(isEven(50));\n// // → true\n//console.log(isEven(75));\n// // → false\n//console.log(isEven(-1));\n// // → ??\n\n// Bean counting\n// You can get the Nth character, or letter, from a string by writing \"string\"[N]. The returned value will be a string containing only one character (for example, \"b\"). The first character has position 0, which causes the last one to be found at position string.length - 1. In other words, a two-character string has length 2, and its characters have positions 0 and 1.\n\n// Write a function countBs that takes a string as its only argument and returns a number that indicates how many uppercase “B” characters there are in the string.\n\n// Next, write a function called countChar that behaves like countBs, except it takes a second argument that indicates the character that is to be counted (rather than counting only uppercase “B” characters). Rewrite countBs to make use of this new function.\n\n// function countBs(str) {\n//   let count = 0;\n//   for (let i=0; i <= str.length-1; i++) {\n//     if (str[i] === \"B\") {\n//       count += 1\n//     }\n//   }\n//   return count;\n// }\n\n//console.log(countBs(\"beachBall\"));\n// // → 2\n\n// function countChar(str,checkChar) {\n//   let count = 0;\n//   for (let i=0; i <= str.length-1; i++) {\n//     (str[i] === checkChar) && (count += 1)\n//   }\n//   return count;\n// }\n\n// console.log(countChar(\"gazelle\", \"l\"));\n// // → 4\n\n\n\n\n\n// ------------------------------------------------------------------------------- //\n// ------------------------------------------------------------------------------- //\n// ------------------------------------------------------------------------------- // \n\n// Exercises for Javascript part-2\n\n\n\n\n\n// 1. Translate border-left-width to borderLeftWidth\n// importance: 5\n// Write the function camelize(str) that changes dash-separated words like “my-short-string” into camel-cased “myShortString”.\n\n// That is: removes all dashes, each word after dash becomes uppercased.\n\n// Examples:\n\n// camelize(\"background-color\") == 'backgroundColor';\n// camelize(\"list-style-image\") == 'listStyleImage';\n// camelize(\"-webkit-transition\") == 'WebkitTransition';\n// P.S. Hint: use split to split the string into an array, transform it and join back.\n\n/*ANSWER\nfunction camelize(str) {\n  let newString = str.split(\"-\"); //Turns str \"This-Word\" into a new array that reads [\"This\", \"Word\"]\n  newString = newString.map(function (word, index) {\n    if (index == 0) {\n      return word.toLowerCase(); //lowercases the whole word\n    } else {\n      return word[0].toUpperCase() + word.slice(1).toLowerCase(); //Uppercases index 0 and adds rest of the word minus 1st element and lowercase corrects for the second argument we pass thru \n    }\n  });\n  newString = newString.join(\"\"); //puts it back together \n  return newString;\n}\nconsole.log(camelize(\"This-Word\"));\n\nconsole.log(camelize(\"This-IS-A-longer-String\"));*/\n\n// ------------------------------------------------------\n\n// 2. Filter range\n// importance: 4\n// Write a function filterRange(arr, a, b) that gets an array arr, looks for elements with values higher or equal to a and lower or equal to b and return a result as an array.\n\n// The function should not modify the array. It should return the new array.\n\n// For instance:\n\n/*let arr = [5, 3, 8, 1];\n\nfunction filterRange(arr, a, b) {\n  return arr.filter(item => (a <= item && item <= b))\n}\n\n\nlet filtered = filterRange(arr, 1, 4);\n\nconsole.log( filtered ); // 3,1 (matching values)\n\nconsole.log( arr ); // 5,3,8,1 (not modified)*/\n\n//Find only returns the first found item\n//while filter returns it all\n\n// -------------------------------------------------------------------------------\n\n// 3. Filter range \"in place\"\n// importance: 4\n// Write a function filterRangeInPlace(arr, a, b) that gets an array arr and removes from it all values except those that are between a and b. The test is: a ≤ arr[i] ≤ b.\n\n// The function should only modify the array. It should not return anything.\n\n// For instance:\n\n// let arr = [5, 3, 8, 1];\n\n// function filterRangeInPlace(arr, a, b) {\n//   for (let i = 0; i < arr.length; i++) {\n//     if (arr[i] < a || arr[i] > b) {\n//       arr.splice(i, 1);\n//       i--\n//     }\n//   }\n// }\n\n// filterRangeInPlace(arr, 1, 4); // removed the numbers except from 1 to 4\n\n// console.log(arr); // [3, 1]\n\n// -------------------------------------------------------------------------------\n\n// 4. Sort in decreasing order\n// importance: 4\n// let arr = [5, 12, 1, -10, 8];\n\n// arr.sort((a, b) => b-a);\n\n// console.log( arr ); // 12,8,5,1,-10\n\n// --------------------------------------------------------------------------------\n\n// 5. Copy and sort array\n// importance: 5\n// We have an array of strings arr. We’d like to have a sorted copy of it, but keep arr unmodified.\n\n// Create a function copySorted(arr) that returns such a copy.\n\n\n// --------------------------------------------------------------------------------\n\n// 6. Create an extendable calculator\n// importance: 5\n// Create a constructor function Calculator that creates “extendable” calculator objects.\n\n// The task consists of two parts.\n\n// First, implement the method calculate(str) that takes a string like \"1 + 2\" in the format “NUMBER operator NUMBER” (space-delimited) and returns the result. Should understand plus + and minus -.\n\n// Usage example:\n\n//let calc = new Calculator;\n\n//console.log( calc.calculate(\"3 + 7\") ); // 10\n\n// function Calculator() {\n\n//   this.methods = {\n//     '+' : (a,b) => a + b,\n//     '-' : (a,b) => a - b\n//   }\n\n//   this.calculate = function(str) {\n//     let splitString = str.split(' '),\n//       a = +splitString[0],\n//       op = splitString[1],\n//       b = +splitString[2];\n\n//   if (isNaN(a) || isNaN (b)) {\n//     return NaN\n//   }\n//   return this.methods[op](a,b);\n//   }\n//   this.addMethod = function(name, func) {\n//     this.methods[name] = func;\n//   }\n// }\n\n// Then add the method addMethod(name, func) that teaches the calculator a new operation. It takes the operator name and the two-argument function func(a,b) that implements it.\n\n// For instance, let’s add the multiplication *, division / and power **:\n\n// let powerCalc = new Calculator;\n// powerCalc.addMethod(\"*\", (a, b) => a * b);\n// powerCalc.addMethod(\"/\", (a, b) => a / b);\n// powerCalc.addMethod(\"**\", (a, b) => a ** b);\n\n// //console.log(powerCalc.methods)\n\n// let result = powerCalc.calculate(\"2 ** 3\");\n// console.log( result ); // 8\n// No parentheses or complex expressions in this task.\n// The numbers and the operator are delimited with exactly one space.\n// There may be error handling if you’d like to add it.\n\n// -------------------------------------------------------------------------------\n\n// 7. Map to names\n// importance: 5\n// You have an array of user objects, each one has user.name. Write the code that converts it into an array of names.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 28 };\n\n// let users = [ john, pete, mary ];\n\n// let names = users.map(item => item.age)\n\n// console.log(names)\n\n// let names = /* ... your code */\n\n// alert( names ); // John, Pete, Mary\n\n// ----------------------------------------------------------------------------------\n\n// 8. Map to objects\n// importance: 5\n// You have an array of user objects, each one has name, surname and id.\n\n// Write the code to create another array from it, of objects with id and fullName, where fullName is generated from name and surname.\n\n// For instance:\n\n// let john = { name: \"John\", surname: \"Smith\", id: 1 };\n// let pete = { name: \"Pete\", surname: \"Hunt\", id: 2 };\n// let mary = { name: \"Mary\", surname: \"Key\", id: 3 };\n\n// let users = [ john, pete, mary ];\n\n// let usersMapped = users.map (user => ({\n//   fullName: `${user.name} ${user.surname}`,\n//   id: user.id\n// }))\n\n// /*\n// usersMapped = [\n//   { fullName: \"John Smith\", id: 1 },\n//   { fullName: \"Pete Hunt\", id: 2 },\n//   { fullName: \"Mary Key\", id: 3 }\n// ]\n// */\n\n//console.log(usersMapped)\n\n// console.log( usersMapped[0].id ) // 1\n// console.log( usersMapped[0].fullName ) // John Smith\n\n// -------------------------------------------------------------------------------\n\n// 9. Sort users by age\n// importance: 5\n// Write the function sortByAge(users) that gets an array of objects with the age property and sorts them by age.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 28 };\n\n// let arr = [ pete, john, mary ];\n\n// function sortByAge(arr) {\n//   arr.sort((a,b) => a.age-b.age)\n// }\n\n// sortByAge(arr);\n\n// // // now: [john, mary, pete]\n// console.log(arr[0].name); // John\n// console.log(arr[1].name); // Mary\n// console.log(arr[2].name); // Pete\n\n// --------------------------------------------------------------------------------\n\n// 10. Shuffle an array\n// importance: 3\n// Write the function shuffle(array) that shuffles (randomly reorders) elements of the array.\n\n// Multiple runs of shuffle may lead to different orders of elements. For instance:\n\n// let arr = [1, 2, 3];\n\n// shuffle(arr);\n// // arr = [3, 2, 1]\n\n// shuffle(arr);\n// // arr = [2, 1, 3]\n\n// shuffle(arr);\n// // arr = [3, 1, 2]\n// // ...\n\n// function shuffle(array) {\n//   for (let i = array.length - 1; i > 0; i--) {\n//     let j = Math.floor(Math.random() * (i+1));\n//     [array[i], array[j]] = [array[j], array[i]];\n//   }\n// }\n\n// ---------------------------------------------------------------------------------\n\n// 11. Get average age\n// importance: 4\n// Write the function getAverageAge(users) that gets an array of objects with property age and returns the average age.\n\n// The formula for the average is (age1 + age2 + ... + ageN) / N.\n\n// For instance:\n\n// let john = { name: \"John\", age: 25 };\n// let pete = { name: \"Pete\", age: 30 };\n// let mary = { name: \"Mary\", age: 29 };\n\n// let arr = [ john, pete, mary ];\n\n// function getAverageAge(users) {\n//   return users.reduce((prev, user) => prev + user.age,0) / users.length\n// }\n\n// console.log( getAverageAge(arr) ); // (25 + 30 + 29) / 3 = 28\n\n// ---------------------------------------------------------------------------------\n\n// 12. Filter unique array members\n// importance: 4\n// Let arr be an array.\n\n// Create a function unique(arr) that should return an array with unique items of arr.\n\n// For instance:\n\n// function unique(arr) {\n//   let result = []\n\n//   for (let str of arr) {\n//     if (!result.includes(str)) {\n//       result.push(str);\n//     }\n//   }\n//   return result;\n// }\n\n// let strings = [\"Hare\", \"Krishna\", \"Hare\", \"Krishna\",\n//   \"Krishna\", \"Krishna\", \"Hare\", \"Hare\", \":-O\"\n// ];\n\n//console.log( unique(strings) ); // Hare, Krishna, :-O\n\n// -------------------------------------------------------------------------------\n\n// 13. Create keyed object from array\n// importance: 4\n// Let’s say we received an array of users in the form {id:..., name:..., age:... }.\n\n// Create a function groupById(arr) that creates an object from it, with id as the key, and array items as values.\n\n// For example:\n\n// let users = [\n//   {id: 'john', name: \"John Smith\", age: 20},\n//   {id: 'ann', name: \"Ann Smith\", age: 24},\n//   {id: 'pete', name: \"Pete Peterson\", age: 31},\n// ];\n\n// let usersById = groupById(users);\n\n// function groupById(array) {\n//   return array.reduce((obj, value) => {\n//     obj[value.id] = value\n//     return obj\n//   }, {})\n// }\n\n// function groupById(arr) {\n//   let result = {}\n//   arr.forEach( (item) => result[item.id] = item )\n//   return result;\n// }\n\n// console.log(usersById)\n\n// /*\n// // after the call we should have:\n\n// usersById = {\n//   john: {id: 'john', name: \"John Smith\", age: 20},\n//   ann: {id: 'ann', name: \"Ann Smith\", age: 24},\n//   pete: {id: 'pete', name: \"Pete Peterson\", age: 31},\n// }\n// */\n// Such function is really handy when working with server data.\n\n// In this task we assume that id is unique. There may be no two array items with the same id.\n\n// Please use array .reduce method in the solution.\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}